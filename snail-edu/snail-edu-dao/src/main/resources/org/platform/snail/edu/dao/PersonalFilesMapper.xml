<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.platform.snail.edu.dao.PersonalFilesMapper" >
  <resultMap id="BaseResultMap" type="org.platform.snail.edu.model.PersonalFiles" >
    <id column="personal_files_id" property="personalFilesId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="CHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.platform.snail.edu.model.PersonalFiles" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    personal_files_id, teacher_id, category, title, file_name, file_url, create_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from personal_files
    where personal_files_id = #{personalFilesId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from personal_files
    where personal_files_id = #{personalFilesId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.platform.snail.edu.model.PersonalFiles" >
    insert into personal_files (personal_files_id, teacher_id, category, 
      title, file_name, file_url, 
      create_time, content)
    values (#{personalFilesId,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, #{category,jdbcType=CHAR}, 
      #{title,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.platform.snail.edu.model.PersonalFiles" >
    insert into personal_files
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="personalFilesId != null" >
        personal_files_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="personalFilesId != null" >
        #{personalFilesId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.platform.snail.edu.model.PersonalFiles" >
    update personal_files
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where personal_files_id = #{personalFilesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.platform.snail.edu.model.PersonalFiles" >
    update personal_files
    set teacher_id = #{teacherId,jdbcType=VARCHAR},
      category = #{category,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where personal_files_id = #{personalFilesId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.platform.snail.edu.model.PersonalFiles" >
    update personal_files
    set teacher_id = #{teacherId,jdbcType=VARCHAR},
      category = #{category,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where personal_files_id = #{personalFilesId,jdbcType=INTEGER}
  </update>
  <select id="findPersonalFilesListByTeacherId"  resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from personal_files
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </select>
</mapper>