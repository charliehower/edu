<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.platform.snail.edu.dao.LearningExperienceMapper" >
  <resultMap id="BaseResultMap" type="org.platform.snail.edu.model.LearningExperience" >
    <id column="learning_experience_id" property="learningExperienceId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="date_start" property="dateStart" jdbcType="DATE" />
    <result column="date_end" property="dateEnd" jdbcType="DATE" />
    <result column="school_name" property="schoolName" jdbcType="VARCHAR" />
    <result column="professional" property="professional" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    learning_experience_id, teacher_id, date_start, date_end, school_name, professional, 
    education, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from learning_experience
    where learning_experience_id = #{learningExperienceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from learning_experience
    where learning_experience_id = #{learningExperienceId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.platform.snail.edu.model.LearningExperience" >
    insert into learning_experience (learning_experience_id, teacher_id, 
      date_start, date_end, school_name, 
      professional, education, create_time
      )
    values (#{learningExperienceId,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, 
      #{dateStart,jdbcType=DATE}, #{dateEnd,jdbcType=DATE}, #{schoolName,jdbcType=VARCHAR}, 
      #{professional,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.platform.snail.edu.model.LearningExperience" >
    insert into learning_experience
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="learningExperienceId != null" >
        learning_experience_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="dateStart != null" >
        date_start,
      </if>
      <if test="dateEnd != null" >
        date_end,
      </if>
      <if test="schoolName != null" >
        school_name,
      </if>
      <if test="professional != null" >
        professional,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="learningExperienceId != null" >
        #{learningExperienceId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="dateStart != null" >
        #{dateStart,jdbcType=DATE},
      </if>
      <if test="dateEnd != null" >
        #{dateEnd,jdbcType=DATE},
      </if>
      <if test="schoolName != null" >
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        #{professional,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.platform.snail.edu.model.LearningExperience" >
    update learning_experience
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="dateStart != null" >
        date_start = #{dateStart,jdbcType=DATE},
      </if>
      <if test="dateEnd != null" >
        date_end = #{dateEnd,jdbcType=DATE},
      </if>
      <if test="schoolName != null" >
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        professional = #{professional,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where learning_experience_id = #{learningExperienceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.platform.snail.edu.model.LearningExperience" >
    update learning_experience
    set teacher_id = #{teacherId,jdbcType=VARCHAR},
      date_start = #{dateStart,jdbcType=DATE},
      date_end = #{dateEnd,jdbcType=DATE},
      school_name = #{schoolName,jdbcType=VARCHAR},
      professional = #{professional,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR}
    where learning_experience_id = #{learningExperienceId,jdbcType=INTEGER}
  </update>
  <select id="findLearningExperienceListByTeacherId" resultMap="BaseResultMap">
  select 
    <include refid="Base_Column_List" />
    from learning_experience
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </select>
</mapper>