<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.platform.snail.edu.dao.PositiveMapper" >
  <resultMap id="BaseResultMap" type="org.platform.snail.edu.model.Positive" >
    
    <id column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="instance_id" property="instanceId" jdbcType="VARCHAR" />
    <result column="positive_time" property="positiveTime" jdbcType="DATE" />
    <result column="rs" property="rs" jdbcType="CHAR" />
    <result column="lo" property="lo" jdbcType="VARCHAR" />
    <result column="leader" property="leader" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="cteate_time" property="cteateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.platform.snail.edu.model.Positive" extends="BaseResultMap" >
    <result column="evaluation" property="evaluation" jdbcType="LONGVARCHAR" />
  </resultMap>
   <resultMap id="BaseResultMap-Teacher" extends="BaseResultMap" type="org.platform.snail.edu.model.Teacher" >
    <id column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="poaf" property="poaf" jdbcType="CHAR" />
    <result column="eb" property="eb" jdbcType="CHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="gi" property="gi" jdbcType="VARCHAR" />
    <result column="gt" property="gt" jdbcType="DATE" />
    <result column="ft_year" property="ftYear" jdbcType="INTEGER" />
    <result column="w_years" property="wYears" jdbcType="INTEGER" />
    <result column="entry_time" property="entryTime" jdbcType="VARCHAR" />
    <result column="tqc_category" property="tqcCategory" jdbcType="CHAR" />
    <result column="tqc_no" property="tqcNo" jdbcType="VARCHAR" />
    <result column="soattr" property="soattr" jdbcType="VARCHAR" />
    <result column="ppt" property="ppt" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    <result column="grade_id" property="gradeId" jdbcType="VARCHAR" />
    <result column="classes_taught" property="classesTaught" jdbcType="VARCHAR" />
    <result column="discipline_id" property="disciplineId" jdbcType="VARCHAR" />
    <result column="pe" property="pe" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="domicile" property="domicile" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap extends="BaseResultMap-Teacher" id="BaseResultMapVo"
		type="org.platform.snail.edu.vo.PositiveVo">
  <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
	</resultMap>
  <sql id="Base_Column_List" >
    instance_id, teacher_id, positive_time, rs, lo, leader, remark, cteate_time
  </sql>
  <sql id="Blob_Column_List" >
    evaluation
  </sql>
  <sql id="Base_Column_List_Teacher" >
    teacher_id, category, name, sex, id_card, poaf, eb, major, gi, gt, ft_year, w_years, 
    entry_time, tqc_category, tqc_no, soattr, ppt, position, department_id, grade_id, 
    classes_taught, discipline_id, pe, photo, address, domicile, tel, email, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from positive
    where teacher_id = #{teacher_id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from positive
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.platform.snail.edu.model.Positive" >
    insert into positive (instance_id, teacher_id, positive_time, 
      rs, lo, leader, remark, 
      cteate_time, evaluation)
    values (#{instanceId,jdbcType=VARCHAR}, #{teacherId,jdbcType=VARCHAR}, #{positiveTime,jdbcType=DATE}, 
      #{rs,jdbcType=CHAR}, #{lo,jdbcType=VARCHAR}, #{leader,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{cteateTime,jdbcType=TIMESTAMP}, #{evaluation,jdbcType=LONGVARCHAR});
      update teacher
    set 
     
      stauts = '2'
    where teacher_id = #{teacherId,jdbcType=VARCHAR};
  </insert>
  <insert id="insertSelective" parameterType="org.platform.snail.edu.model.Positive" >
    insert into positive
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="instanceId != null" >
        instance_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="positiveTime != null" >
        positive_time,
      </if>
      <if test="rs != null" >
        rs,
      </if>
      <if test="lo != null" >
        lo,
      </if>
      <if test="leader != null" >
        leader,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="cteateTime != null" >
        cteate_time,
      </if>
      <if test="evaluation != null" >
        evaluation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="instanceId != null" >
        #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="positiveTime != null" >
        #{positiveTime,jdbcType=DATE},
      </if>
      <if test="rs != null" >
        #{rs,jdbcType=CHAR},
      </if>
      <if test="lo != null" >
        #{lo,jdbcType=VARCHAR},
      </if>
      <if test="leader != null" >
        #{leader,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cteateTime != null" >
        #{cteateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="evaluation != null" >
        #{evaluation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.platform.snail.edu.model.Positive" >
    update positive
    <set >
     
      <if test="positiveTime != null" >
        positive_time = #{positiveTime,jdbcType=DATE},
      </if>
      <if test="rs != null" >
        rs = #{rs,jdbcType=CHAR},
      </if>
      <if test="lo != null" >
        lo = #{lo,jdbcType=VARCHAR},
      </if>
      <if test="leader != null" >
        leader = #{leader,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cteateTime != null" >
        cteate_time = #{cteateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="evaluation != null" >
        evaluation = #{evaluation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where  teacher_id = #{teacherId,jdbcType=VARCHAR},
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.platform.snail.edu.model.Positive" >
    update positive
    set 
      instance_id = #{instanceId,jdbcType=VARCHAR},
      positive_time = #{positiveTime,jdbcType=DATE},
      rs = #{rs,jdbcType=CHAR},
      lo = #{lo,jdbcType=VARCHAR},
      leader = #{leader,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      cteate_time = #{cteateTime,jdbcType=TIMESTAMP},
      evaluation = #{evaluation,jdbcType=LONGVARCHAR}
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.platform.snail.edu.model.Positive" >
    update positive
    set 
      instance_id = #{instanceId,jdbcType=VARCHAR},
      positive_time = #{positiveTime,jdbcType=DATE},
      rs = #{rs,jdbcType=CHAR},
      lo = #{lo,jdbcType=VARCHAR},
      leader = #{leader,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      cteate_time = #{cteateTime,jdbcType=TIMESTAMP}
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </update>
  
   <sql id="whereCondition">

		from (select teacher.teacher_id, teacher.category, teacher.name, teacher.sex, teacher.id_card,teacher.entry_time,positive.instance_id,
		positive.positive_time, positive.rs, positive.lo, positive.leader, positive.cteate_time from teacher left join positive on teacher.teacher_id=positive.teacher_id		
) teacher where 0=0

 <if test="condition.stauts!=null and condition.stauts==1">

			and teacher.positive_time is null

		</if>
		<if test="condition.stauts!=null and condition.stauts==2">
and teacher.positive_time is not null

		</if>
		<if test="condition.category!=null and condition.category!=&quot;&quot;">

			and
			teacher.category=#{condition.category,jdbcType=VARCHAR}

		</if>

		<if test="condition.name!=null and condition.name!=&quot;&quot;">
			and teacher.name like
			concat(#{condition.name,jdbcType=VARCHAR},'%')
		</if>
		<if test="condition.teacherId!=null and condition.teacherId!=&quot;&quot;">

			and
			teacher.teacher_id=#{condition.teacherId,jdbcType=VARCHAR}

		</if>
	</sql>

	<select id="findCount" resultType="int">

		SELECT COUNT(*)

		<include refid="whereCondition" />

	</select>

	<select id="findList" resultMap="BaseResultMapVo">
		select
		teacher.teacher_id, teacher.category, teacher.name, teacher.sex, teacher.id_card,teacher.entry_time,
		teacher.positive_time, teacher.rs, teacher.lo, teacher.leader, teacher.cteate_time audit_time,teacher.instance_id

		<include refid="whereCondition" />

		<choose>

			<when test="orderBy!=null and orderBy!=&quot;&quot;">

				ORDER BY ${orderBy}

			</when>

			<otherwise>

				ORDER BY teacher.teacher_id

			</otherwise>

		</choose>
		limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
	</select>
	<select id="isExitByTeacherId" resultType="int">
		select count(1) from positive where teacher_id=#{teacherId}
	</select>
</mapper>