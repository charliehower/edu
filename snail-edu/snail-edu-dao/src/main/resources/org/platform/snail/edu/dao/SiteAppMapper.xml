<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.platform.snail.edu.dao.SiteAppMapper" >
  <resultMap id="BaseResultMap" type="org.platform.snail.edu.model.SiteApp" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <result column="app_time" property="appTime" jdbcType="TIMESTAMP" />
    <result column="start" property="start" jdbcType="TIMESTAMP" />
    <result column="end" property="end" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.platform.snail.edu.model.SiteApp" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMapVo" type="org.platform.snail.edu.vo.SiteAppVo"
		extends="ResultMapWithBLOBs">
	</resultMap>
  <sql id="Base_Column_List" >
    id, title, category, user_id, app_time, start, end, class_name,create_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from site_app
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from site_app
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.platform.snail.edu.model.SiteApp" >
    insert into site_app (id, title, category, 
      user_id, app_time, start, 
      end, create_time, content,class_name
      )
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{appTime,jdbcType=TIMESTAMP}, #{start,jdbcType=TIMESTAMP}, 
      #{end,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR},#{className,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.platform.snail.edu.model.SiteApp" >
    insert into site_app
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="appTime != null" >
        app_time,
      </if>
      <if test="start != null" >
        start,
      </if>
      <if test="end != null" >
        end,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="appTime != null" >
        #{appTime,jdbcType=TIMESTAMP},
      </if>
      <if test="start != null" >
        #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null" >
        #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.platform.snail.edu.model.SiteApp" >
    update site_app
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="appTime != null" >
        app_time = #{appTime,jdbcType=TIMESTAMP},
      </if>
      <if test="start != null" >
        start = #{start,jdbcType=TIMESTAMP},
      </if>
      <if test="end != null" >
        end = #{end,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.platform.snail.edu.model.SiteApp" >
    update site_app
    set title = #{title,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      app_time = #{appTime,jdbcType=TIMESTAMP},
      start = #{start,jdbcType=TIMESTAMP},
      end = #{end,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.platform.snail.edu.model.SiteApp" >
    update site_app
    set title = #{title,jdbcType=VARCHAR},
      start = #{start,jdbcType=TIMESTAMP},
      end = #{end,jdbcType=TIMESTAMP},
       content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
<select id="isExit" resultType="int">
		select count(*) from
		site_app
		where id=#{id}
	</select>
	<sql id="whereCondition">
		from site_app
		where app_time>=date_sub(now(), interval 1 month)

		and
			category=#{condition.category,jdbcType=VARCHAR}

	</sql>
	<select id="findCount" resultType="int">
		SELECT COUNT(*)
		<include refid="whereCondition" />
	</select>
	<select id="findList" resultMap="BaseResultMapVo">
		select <include refid="Base_Column_List" />
		<include refid="whereCondition" />
		<choose>
			<when test="orderBy!=null and orderBy!=&quot;&quot;">
				ORDER BY ${orderBy}
			</when>
			<otherwise>
				ORDER BY create_time desc
			</otherwise>
		</choose>
		limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}
	</select>
	<select id="selectSiteList" resultType="map">
		SELECT
		t.ID ,
		'0' PID,
		concat(t.name,case t.status when 1 then concat('[',t.reason,'关闭]')  else ''  end) TEXT,
		t.flag SRC,
		concat(t.start_hh,':',t.start_mm,'-',t.end_hh,':',t.end_mm) HREF,
		'closed' STATE,
		'' ICON,
		'0' CHILD_COUNT
		from site t
		order by t.id
	</select>
	<select id="selectListByStart" resultType="map">
		SELECT
		title,
		start,end from site_app where
		DATE_FORMAT(start, '%Y-%m-%d')=#{start} and id !=#{id}
	</select>
</mapper>