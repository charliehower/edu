<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.platform.snail.portal.dao.DictCategoryMapper">
	<resultMap id="BaseResultMap" type="org.platform.snail.portal.model.DictCategory">
		<id column="category_id" jdbcType="VARCHAR" property="categoryId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>
	<sql id="Base_Column_List">
		category_id, name, remark, create_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dict_category
		where category_id = #{categoryId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		dict_category
		where category_id = #{categoryId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="org.platform.snail.portal.model.DictCategory">
		<selectKey keyProperty="categoryId" resultType="string"
			order="BEFORE">

			select lpad(ifnull(max(t.category_id),0)+1,'2','0') from dict_category t

		</selectKey>
		insert into dict_category (category_id, name, remark,
		create_time)
		values (#{categoryId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="org.platform.snail.portal.model.DictCategory">
		insert into dict_category
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="categoryId != null">
				category_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="categoryId != null">
				#{categoryId,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.platform.snail.portal.model.DictCategory">
		update dict_category
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where category_id = #{categoryId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.platform.snail.portal.model.DictCategory">
		update
		dict_category
		set name = #{name,jdbcType=VARCHAR},
		remark =
		#{remark,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where category_id =
		#{categoryId,jdbcType=VARCHAR}
	</update>

	<sql id="whereCondition">
		from dict_category where 0=0
		<if test='condition.name!=null and condition.name!=""'>
			and name like
			concat(#{condition.name,jdbcType=VARCHAR},'%')
		</if>
	</sql>
	<select id="findCount" resultType="int">
		SELECT COUNT(*)
		<include refid="whereCondition" />
	</select>
	<select id="findList" resultMap="BaseResultMap">

		select
		<include refid="Base_Column_List" />
		<include refid="whereCondition" />
		<choose>
			<when test='orderBy!=null and orderBy!=""'>
				ORDER BY ${orderBy}
			</when>
			<otherwise>
				ORDER BY category_id
			</otherwise>
		</choose>

		limit #{start,jdbcType=DECIMAL}, #{limit,jdbcType=DECIMAL}

	</select>
	<select id="findListAll" resultMap="BaseResultMap">

		select
		<include refid="Base_Column_List" />
		from dict_category order by create_time

	</select>
	<select id="isExitByName" resultType="int">
		select count(*)
		from
		dict_category where name=#{name}
	</select>
</mapper>